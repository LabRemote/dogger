#

def 10K3A2B(U_therm, U_exc):
    R_thermistor = 1e3 * numpy.array([336.098,314.553,294.524,275.897,258.563,242.427,227.398,213.394,200.339,188.163,176.803,166.198,156.294,147.042,138.393,130.306,122.741,115.661,109.032,102.824,97.006,91.553,86.439,81.641,77.138,72.911,68.940,65.209,61.703,58.405,55.304,52.385,49.638,47.050,44.613,42.317,40.151,38.110,36.184,34.366,32.651,31.031,29.500,28.054,26.687,25.395,24.172,23.016,21.921,20.885,19.903,18.973,18.092,17.257,16.465,15.714,15.001,14.324,13.682,13.073,12.493,11.943,11.420,10.923,10.450,10.000,9.572,9.165,8.777,8.408,8.056,7.721,7.402,7.097,6.807,6.530,6.266,6.014,5.774,5.544,5.325,5.116,4.916,4.724,4.542,4.367,4.200,4.040,3.887,3.741,3.601])
    t_thermistor = numpy.arange(-40.0, 51.0)
    f_R_thermistor = scipy.interpolate.interp1d(R_thermistor, t_thermistor, kind='cubic', bounds_error=False, fill_value=-9999.0)
    R_ext = 9.93e3
    R = R_ext * 1 / (U_exc/U_therm - 1)
    return f_R_thermistor(R)

def Opto_22_AD3_SATT_ETT45_0101(U_par):
    return ( U_par/249.0 * 1000.0 - 4.0 ) / 16.0 * 100.0

def D_PYRPA_CA(U_pyran):
    return U_pyran / 2.5 * 1000.0

def AC_analyzer(U_pow):
    return ( U_pow / 220 * 1000.0 - 4.0 ) / 16.0 * 1e-6
